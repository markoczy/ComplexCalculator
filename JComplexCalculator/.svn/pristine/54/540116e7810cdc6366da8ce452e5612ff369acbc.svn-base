package mkz.cc.core.equation.function;

import java.util.ArrayList;

import mkz.cc.core.debug.CCalcException;
import mkz.cc.core.debug.equation.InvalidParamCountException;
import mkz.cc.core.equation.IEquation;
import mkz.cc.core.equation.IFunction;

public class ParamFunction implements IFunction
{
	private String mName=null;
	
	private ArrayList<String> mParamNames = new ArrayList<String>();
	
	LinearParamEquation mEquation=null;

	public ParamFunction(String aName,LinearParamEquation aEquation)
	{
		mName=aName;
		mEquation=aEquation;
	}
	
	public ParamFunction(String aName,ArrayList<String> aParamNames,LinearParamEquation aEquation)
	{
		mName=aName;
		mParamNames=aParamNames;
		mEquation=aEquation;
	}
	
	public ParamFunction addParam(String aName)
	{
		mParamNames.add(aName);
		return this;
	}
	
	@Override
	public double getValue(ArrayList<IEquation> aEqArr) throws CCalcException
	{
		if(aEqArr.size()!=mParamNames.size())throw new InvalidParamCountException(mName,aEqArr.size());
		
		for(int i=0;i<aEqArr.size();i++)
		{
			mEquation.setParam(mParamNames.get(i), aEqArr.get(i));
		}
		
		return mEquation.getValue();
	}

}
