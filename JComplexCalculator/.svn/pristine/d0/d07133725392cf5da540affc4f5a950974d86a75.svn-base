package mkz.cc.core.common;

public class CC_Common 
{
	static final char[] DECIMALS = {'0','1','2','3','4','5','6','7','8','9','0','.'};
	static final char[] OPS = {'+','-','*','/','^'};
	static final char[] ALPHAS = {	'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',
									'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};
	
	public static boolean isParOpen(char chr)
	{
		return chr == '(';
	}

	public static boolean isParClose(char chr)
	{
		return chr == ')';
	}
	
	public static boolean isDecimal(char chr)
	{
		for(char c : DECIMALS)
		{
			if(c==chr)
			{
				return true;
			}
		}
		return false;
	}
	
	public static boolean isAlpha(char chr)
	{
		for(char c : ALPHAS)
		{
			if(c==chr)
			{
				return true;
			}
		}
		return false;
	}
	
	public static boolean isOperator(char chr)
	{
		for(char c : OPS)
		{
			if(c==chr)
			{
				return true;
			}
		}
		return false;
	}

	public static int parseParanthesis(char chr)
	{
		if (isParOpen(chr))
		{
			return 1;
		}
		else if (isParClose(chr))
		{
			return -1;
		}
	
		return 0;
	}
	
	public static boolean isFcnDefOp(char chr1, char chr2)
	{
		if (chr1 == ':')
		{
			return chr2 == '=';
		}

		return false;
	}
	//

	public static boolean isFcnDefEq(String eq)
	{
		if (eq.length() == 0) return false;

		for (int i = 0; i < eq.length() - 1; i++)
		{
			if (eq.charAt(i) == ':')
			{
				if (eq.charAt(i + 1) == '=') return true;
			}

		}

		return false;

	}
	
}
