package mkz.cc.test;

import java.util.ArrayList;
import java.util.Arrays;

import mkz.cc.core.arithmetic.ArithmeticEquationFactory;
import mkz.cc.core.arithmetic.equation.ParamLinearArithmeticEquation;
import mkz.cc.core.arithmetic.function.FunctionPool;
import mkz.cc.core.equation.Constant;
import mkz.cc.core.equation.Equation;
import mkz.cc.core.equation.Operation;
import mkz.cc.core.equation.definition.IEquation;
import mkz.cc.core.equation.function.Variable;

public class TestFunctionsPool
{

	public static void main(String[] args)
	{
		// Test 1: sin(5)
		//
		Equation<Double> lSinEq = ArithmeticEquationFactory.createFuncionEquation("sin");
		System.out.println("Value = "+lSinEq.addParam(new Constant<Double>(5.0)).getValue());

		// Test 2: sum(1,2,3,4)
		//
		Equation<Double> lSumEq = ArithmeticEquationFactory.createFuncionEquation("sum");
		ArrayList<IEquation<Double>>lParams =new ArrayList<IEquation<Double>>();
		lParams.add(new Constant<Double>(1.0));
		lParams.add(new Constant<Double>(2.0));
		lParams.add(new Constant<Double>(3.0));
		lSumEq.setParams(lParams);
		System.out.println("Value = "+lSumEq.getValue());
		
		// Test 3: Create Function test(x):=x*2
		//
		ParamLinearArithmeticEquation lFunction= new ParamLinearArithmeticEquation();
		lFunction.addOperation(new Variable<Double>("x"), Operation.MPL);
		lFunction.addOperation(new Constant<Double>(2.0), Operation.CONST);
		FunctionPool.getInstance().addFunction("test", "My test function", new ArrayList<String>(Arrays.asList(new String[]{"x"})),"test(x):=x*2",lFunction);
		Equation<Double> lTestEq=ArithmeticEquationFactory.createFuncionEquation("test");
		System.out.println("test(x):=x*2 -> test(5)="+lTestEq.addParam(new Constant<Double>(5.0)).getValue());
		
	}

}
