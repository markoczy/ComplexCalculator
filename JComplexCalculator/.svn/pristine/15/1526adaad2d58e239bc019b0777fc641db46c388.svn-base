package mkz.cc.ui;

import java.util.ArrayList;

import mkz.cc.util.IO;

public class LogicalTruthTableDisp
{
	private static final String RESULT_STRING="R";

	public ArrayList<String> getLines(boolean[][] aGrid, ArrayList<String> aParamNames)
	{
		return null;
	}
	
	
	// TODO outsource gfx...
		protected ArrayList<String> _getHeaderRows(ArrayList<String> aParamNames)
		{
			if(aParamNames==null)
			{
				IO.SysOutE("Cannot create Header, no params found.");
				return null;
			}
			
			StringBuilder lRow1=new StringBuilder();
			StringBuilder lRow2=new StringBuilder();
			
			lRow1.append("+");
			lRow2.append("|");
			
			for(String iParamName:aParamNames)
			{
				lRow1.append('-');
				for(int i=0;i<iParamName.length();i++)
				{ 
					lRow1.append('-');
				}
				// ' ' & '|' 
				lRow1.append('-');
				lRow1.append('-');
				
				
				lRow2.append(' ');
				lRow2.append(iParamName);
				lRow2.append(' ');
				lRow2.append('|');
				
			}
			
			lRow1.append('-');
			for(int i=0;i<RESULT_STRING.length();i++)
			{ 
				lRow1.append('-');
			}
			lRow1.append('-');
			
			lRow2.append(' ');
			lRow2.append(RESULT_STRING);
			lRow2.append(' ');
			lRow2.append('|');
			lRow1.append("+");
			
			ArrayList<String> rVal = new ArrayList<String>();
			
			rVal.add(lRow1.toString());
			rVal.add(lRow2.toString());
			rVal.add(lRow1.toString());
			
			return rVal;
		}
		
		protected ArrayList<String> _getBodyRows(ArrayList<String> aParamNames,ArrayList<ArrayList<Boolean>> aParams)
		{
			ArrayList<Integer> lOffsetsLeft = new ArrayList<Integer>();
			ArrayList<Integer> lOffsetsRight = new ArrayList<Integer>();
			
			for(String iParamName:aParamNames)
			{
				lOffsetsRight.add((int)(iParamName.length()/2));
				lOffsetsLeft.add(iParamName.length()-(int)(iParamName.length()/2)-1);
			}
			lOffsetsRight.add((int)(RESULT_STRING.length()/2));
			lOffsetsLeft.add(RESULT_STRING.length()-(int)(RESULT_STRING.length()/2)-1);
			
//			for(Integer iOffLeft:lOffsetsLeft) IO.SysOutV("Offset left: "+iOffLeft);
//			for(Integer iOffRight:lOffsetsRight) IO.SysOutV("Offset right: "+iOffRight);
			
			
			ArrayList<String> rVal = new ArrayList<String>();
			
			for(int iRow=0;iRow<aParams.size();iRow++)
			{
				StringBuilder lRowStr = new StringBuilder();
				lRowStr.append('|');
				for(int iCol=0;iCol<aParams.get(iRow).size();iCol++)
				{
					lRowStr.append(' ');
					for(int iOffL=0;iOffL<lOffsetsLeft.get(iCol);iOffL++)lRowStr.append(' ');
					
					lRowStr.append(""+(aParams.get(iRow).get(iCol)==true?1:0));
					
					for(int iOffR=0;iOffR<lOffsetsRight.get(iCol);iOffR++)lRowStr.append(' ');
					
					lRowStr.append(' ');
					lRowStr.append('|');
				}
				
				rVal.add(lRowStr.toString());
			}
			
			
			return rVal;
		}
}
