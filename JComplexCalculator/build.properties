################################################################################
# PROPERTY FILE FOR ANT JAVA BUILDER                                           #
################################################################################
# Version        : V1.0.1
# Initial Author : Aleistar Markóczy
# Depends        : ANT contrib >0.3
#
# >> feel free to do whatever with this file or the build XML...
################################################################################

# ATTENTION: Be sure to set the Project main class here
main.class=mkz.cc.launch.CCalcSimpleCLI

################################################################################
# 1. VERSION DEFINITION                                                        #
################################################################################

# Version (usually the release number i.e. 1 for version 1.X.X)
version.major=0
version.major.token=%BUILD_VER%
# Sub Version (usually a milestone definition)
version.minor=2
version.minor.token=%BUILD_SVER%
# Build ID (the user created id, not the autogenerated UID)
version.build=6
version.build.token=%BUILD_ID%
# Build UID (autogenerated unique identifier, increments on each build)
version.build_uid.token=%BUILD_UID%
# Build Timestamp
version.tstamp.token=%BUILD_TSTAMP%
version.tstamp.pattern=yyyy.MM.dd_HH:mm:ss
# Version Pattern for manifest (or code)
version.full=${version.major}.${version.minor}.${version.build}
version.full.token=%BUILD_FULLVER%

################################################################################
# 2. PROJECT DEFINITION                                                        #
################################################################################

# Project data for manifest
project.name=JComplexCalculator
project.name.token=%PROJECT_NAME%
project.vendor=Aleistar Markoczy
project.vendor.token=%PROJECT_VENDOR%

# Sets wether the files should be copied to build directory
project.haslib=true
project.hasscript=true
project.hasres=false

################################################################################
# 3. BUILD DEFINITION                                                        #
################################################################################

# This setting sets the java compiler to debug mode
build.is_debug=true

# Ecoding, default is UTF8, change is discouraged (may not run)
build.encoding=UTF8

# Comma separated list of files, supports wildcard
build.include=
build.exclude=mkz/cc/test/**

# Defines if tokens should be replaced in source folder
build.replace_tokens.src=true
# Defines if tokens should be replaced in resources folder
build.replace_tokens.res=false
# Defines if tokens should be replaced in script folder
build.replace_tokens.script=false

# input directory for source files (relative to build.xml)
path.dir.src=src
# input directory for jar libraries (relative to build.xml)
path.dir.lib=lib
# input directory for scripts (if any, relative to build.xml)
path.dir.script=script
# input directory for resources (if any, relative to build.xml)
path.dir.res=res

# Output main directory (relative to build.xml)
build.dir=deploy
# Output directory for libraries (relative to output main dir)
build.dir.lib=lib
# Output directory for scripts (relative to output main dir)
build.dir.script=
# Output directory for resources (relative to output main dir)
build.dir.res=doc


################################################################################
# 3. INSTALL DEFINITION                                                        #
################################################################################

# name of the zip file to be generated (without extension)
install.pattern=${project.name}_V${version.full}
